apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        // 自定义本地Maven路径，默认路径是~/.m2/repository
        //repositories {
        //    maven {
        //        name = 'localRepo'
        //        url = "file:///storage/emulated/0/Maven/repository"
        //    }
        //}
        publications {
            release(MavenPublication) {
                groupId = 'com.gitee.zhangsken'
                artifactId = 'libapputils'
				// 版本号说明：{项目结构版本号}.{功能识别版本号}.{代码调试号}
                version = '1.0.0'
    
                //from components.java
                // 必须有这个 否则不会上传AAR包
                afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
                // 上传source，这样使用方可以看到方法注释
                //artifact generateSourcesJar
                //要上传的aar路径
                //artifact "$buildDir/outputs/aar/${project.getName()}-release.aar"
                //artifact "$buildDir/outputs/aar/${project.getName()}-debug.aar"
                
                pom {
                    name = 'Application Utils Library'
                    description = 'ZhanGSKen\'s Application Utils Library'
                    url = 'https://github.com/zhangsken/libapputils.git'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                    }
                    developers {
                        developer {
                            id = 'zhangsken'
                            name = 'ZhanGSKen'
                            email = 'ZhanGSKen@QQ.COM'
                        }
                    }
                }
            }
        }
    }
}


android {
    compileSdk 33
    buildToolsVersion '33.0.3'
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
